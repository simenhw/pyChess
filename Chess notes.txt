Piece map values:
	1 = Can not move to this square, but square is protected
	2 = Can move to this avaliable square
	3 = Can move to this square and capture piece
	4 = Can capture on this square, but not move to it (En Passant)
	5 = Check (attacking odd colored king)

staleGame = [
('c2', 'c4'),
('h7', 'h5'),
('h2', 'h4'),
('a7', 'a5'),
('d1', 'a4'),
('a8', 'a6'),
('a4', 'a5'),
('a6', 'h6'),
('a5', 'c7'),
('f7', 'f6'),
('c7', 'd7'),
('e8', 'f7'),
('d7', 'b7'),
('d8', 'd3'),
('b7', 'b8'),
('d3', 'h7'),
('b8', 'c8'),
('f7', 'g6'),
('c8', 'e6'),
]

for tuple in staleGame:
    print(game.move(tuple[0],tuple[1]))
    game.printBoard()

mateGame = [
('f2', 'f3'),
('e7', 'e5'),
('g2', 'g4'),
('d8', 'h4')
]

for tuple in mateGame:
    print(game.move(tuple[0],tuple[1]))
    game.printBoard()

mousedown on legal piece

    def draw_pieces(self, exceptPiece):
        for square in game.board:
            if game.board[square] != 0:
                piece = game.board[square]
                xPos = (spilt_squarename(square)[0]-1)*100
                yPos = (8-spilt_squarename(square)[1])*100
                if exceptPiece == piece:
                       xPos = exceptPos[0]
                       yPos = exceptPos[1]
                colorAdder = 0
                if piece.color == 'black':
                    colorAdder = 100
                if piece.name == 'king':
                    self.win.blit(piece_sprite, (xPos,yPos),((0,colorAdder),(100,100)))
                elif piece.name == 'queen':                                           
                    self.win.blit(piece_sprite, (xPos,yPos),((100,colorAdder),(100,100)))
                elif piece.name == 'bishop':                                          
                    self.win.blit(piece_sprite, (xPos,yPos),((200,colorAdder),(100,100)))
                elif piece.name == 'knight':                                          
                    self.win.blit(piece_sprite, (xPos,yPos),((300,colorAdder),(100,100)))
                elif piece.name == 'rook':                                            
                    self.win.blit(piece_sprite, (xPos,yPos),((400,colorAdder),(100,100)))
                elif piece.name == 'pawn':                                            
                    self.win.blit(piece_sprite, (xPos,yPos),((500,colorAdder),(100,100)))